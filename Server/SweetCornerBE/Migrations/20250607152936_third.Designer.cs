// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SweetCornerBE;

#nullable disable

namespace SweetCornerBE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607152936_third")]
    partial class third
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("SweetCornerBE.Model.Entities.CakeConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreamColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreamFlavor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreamKind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FillingFlavor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FillingKind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Frosting")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FrostingColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpongeColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SpongeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("CakeConfigs");
                });

            modelBuilder.Entity("SweetCornerBE.Model.Entities.MacaroonsCupcakesConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreamColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreamKind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FillingFlavor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FillingKind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpongeColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("MacaroonsCupcakesConfigs");
                });

            modelBuilder.Entity("SweetCornerBE.Model.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientMail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FactoryMail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SweetCornerBE.Model.Entities.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("SweetCornerBE.Model.Entities.CakeConfig", b =>
                {
                    b.HasOne("SweetCornerBE.Model.Entities.Order", "Order")
                        .WithMany("Cakes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SweetCornerBE.Model.Entities.MacaroonsCupcakesConfig", b =>
                {
                    b.HasOne("SweetCornerBE.Model.Entities.Order", "Order")
                        .WithMany("MacaroonsCupcakes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SweetCornerBE.Model.Entities.Order", b =>
                {
                    b.HasOne("SweetCornerBE.Model.Entities.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("SweetCornerBE.Model.Entities.Order", b =>
                {
                    b.Navigation("Cakes");

                    b.Navigation("MacaroonsCupcakes");
                });
#pragma warning restore 612, 618
        }
    }
}
